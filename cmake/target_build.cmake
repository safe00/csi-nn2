if(CONFIG_SHL_BUILD_STATIC)
    add_library(${SHL_LIB_TARGET} STATIC ${SHL_BUILD_SRC_LST})
else()
    add_library(${SHL_LIB_TARGET} SHARED ${SHL_BUILD_SRC_LST})
endif()
SET_TARGET_PROPERTIES(${SHL_LIB_TARGET} PROPERTIES OUTPUT_NAME ${SHL_LIB_NAME})
SET_TARGET_PROPERTIES(${SHL_LIB_TARGET} PROPERTIES VERSION ${SHL_VERSION})
SET_TARGET_PROPERTIES(${SHL_LIB_TARGET} PROPERTIES SOVERSION ${SHL_MAJOR_VERSION})
target_compile_options(${SHL_LIB_TARGET} PRIVATE ${SHL_BUILD_C_FLAGS})

if(CONFIG_SHL_BUILD_STATIC)
  target_compile_options(${SHL_LIB_TARGET} PRIVATE -fPIC)
endif()

install(TARGETS ${SHL_LIB_TARGET} DESTINATION lib)
if(CONFIG_SHL_BUILD_STATIC)
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink lib${SHL_LIB_NAME}.a ${a_symlink_target})")
else()
    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink lib${SHL_LIB_NAME}.so ${so_symlink_target})")
endif()
